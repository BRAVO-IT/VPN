#!/bin/bash
# Homepage: https://github.com/BRAVO-IT/VPN
# Author: BRAVO_IT

function get_external_address() {
    local addr=$( timeout 3 curl -s http://ipecho.net/plain || \
                  timeout 3 curl -s http://ident.me/ || \
                  timeout 3 curl -s http://whatismyip.akamai.com/ )
    [ $? -ne 0 ] && addr="<this server IP address>"
    echo "$addr"
}

# Default proxy credentials
USER="proxyuser"
PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 12)

# Detect OS
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
else
    echo "Unsupported OS"
    exit 1
fi

# Install Squid
function install_squid() {
    if [[ "$OS" == "ubuntu" || "$OS" == "debian" ]]; then
        apt update && apt install -y squid apache2-utils
    elif [[ "$OS" == "centos" || "$OS" == "fedora" ]]; then
        yum install -y squid httpd-tools
    else
        echo "Unsupported OS"
        exit 1
    fi
}

# Generate password file for authentication
function generate_authentication() {
    touch /etc/squid/passwords
    htpasswd -b -c /etc/squid/passwords "$USER" "$PASSWORD"
}

# Generate Squid config file with authentication
function generate_squid_config() {
    if [[ "$OS" == "ubuntu" || "$OS" == "debian" ]]; then
        AUTH_PATH="/usr/lib/squid/basic_ncsa_auth"
    elif [[ "$OS" == "centos" || "$OS" == "fedora" ]]; then
        AUTH_PATH="/usr/lib64/squid/basic_ncsa_auth"
    fi

    cat > /etc/squid/squid.conf <<EOF
http_port 3128
acl localnet src 0.0.0.0/0
auth_param basic program $AUTH_PATH /etc/squid/passwords
auth_param basic realm Proxy
acl authenticated proxy_auth REQUIRED
http_access allow authenticated
EOF
}

# Create Squid Service File (For CentOS/Fedora if missing)
function create_squid_service() {
    if [[ "$OS" == "centos" || "$OS" == "fedora" ]]; then
        if [[ ! -f /etc/systemd/system/squid.service ]]; then
            cat > /etc/systemd/system/squid.service <<EOF
[Unit]
Description=Squid Web Proxy
After=network.target

[Service]
Type=forking
ExecStart=/usr/sbin/squid -s
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF
            systemctl daemon-reload
        fi
    fi
}

# Open firewall ports
function open_firewall_ports() {
    if command -v ufw > /dev/null; then
        ufw allow 3128/tcp
    fi
    if command -v firewall-cmd > /dev/null; then
        firewall-cmd --zone=public --permanent --add-port=3128/tcp
        firewall-cmd --reload
    fi
}

# Restart Squid service
function restart_squid() {
    systemctl enable squid
    systemctl restart squid
}

install_squid
generate_authentication
generate_squid_config
create_squid_service
open_firewall_ports
restart_squid

echo "Your HTTP/HTTPS Proxy Configuration:"
echo "Protocol: HTTP & HTTPS"
echo "Address : $(get_external_address)"
echo "Port    : 3128"
echo "User    : $USER"
echo "Pass    : $PASSWORD"
